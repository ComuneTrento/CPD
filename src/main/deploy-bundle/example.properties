# cluster
cpd.cluster.port=5701
cpd.cluster.port.autoIncrement=false
cpd.cluster.port.count=10000
cpd.cluster.interface=10.10.1.*
cpd.cluster.outbound.ports=*
# ssl
cpd.ssl.enabled=false
cpd.ssl.keystore.filename=keystore.jks
cpd.ssl.keystore.password=simpatico
# server
cpd.server.name=Simpatico CPD Server
cpd.server.scheme=http
cpd.server.host=localhost
cpd.server.port=8901
cpd.server.baseHref=/cpd/
cpd.server.allowedOriginPattern=^https?:\\\\/\\\\/(www\\\\.)(localhost|my\\\\.domain\\\\.com)(:\\\\d+)?$
cpd.server.simLagTime=200
! server.public
cpd.server.pub.scheme=${cpd.server.scheme}
cpd.server.pub.host=${cpd.server.host}
cpd.server.pub.port=${cpd.server.port}
! server.cacheBuilder
cpd.server.cacheBuilder.concurrencyLevel=1
cpd.server.cacheBuilder.initialCapacity=100
cpd.server.cacheBuilder.maximumSize=1000
cpd.server.cacheBuilder.expireAfterAccess=60m
! server.schema
cpd.server.schema.path=schema/
! server.auth
cpd.server.auth.path=auth/
cpd.server.auth.login=login/{provider}
cpd.server.auth.logout=logout
cpd.server.auth.getOAuth2Providers=oauth2/providers
cpd.server.auth.getUserIsAuthenticated=user/isAuthenticated
cpd.server.auth.getUser=user
cpd.server.auth.getUserHasAccess=user/hasAccess/{accessRole}
cpd.server.auth.getUserIsAuthorized=user/isAuthorized/{contextName}/{contextId}/{contextRole}
! server.api
cpd.server.api.path=api/
cpd.server.api.getDiagramSummaryList=diagram/summary/list
cpd.server.api.postUserFeedback=user/feedback
cpd.server.api.getDiagramElement=diagram/{id}
cpd.server.api.putDiagramElement=diagram
cpd.server.api.delDiagramElement=diagram/{id}
cpd.server.api.getModelElement=model/{id}
cpd.server.api.putModelElement=model
cpd.server.api.delModelElement=model/{id}
cpd.server.api.getDiagramElements=diagram/{rootId}/elements
cpd.server.api.getDiagramModels=diagram/{rootId}/models
cpd.server.api.getStencilSetDefinition=data/stencilSetDefinition/{notation}
! server.assets
cpd.server.assets.allowListing=false
# CPD app
cpd.app.path=
cpd.app.useLocalAuth=false
cpd.app.locales="en","es","it"
cpd.app.routes="login","login/*","diagram/*","oauth2/client/callback","schema-validator"
cpd.app.diagramPath=diagram/
# QAE webapp
cpd.qae.href=https://simpatico.morelab.deusto.es/qae/
cpd.qae.api.path=api/
cpd.qae.api.getQuestionCount=stats/diagrams/{elementId}
cpd.qae.link.newQuestion=questions/create?tags={eServiceId},{diagramId},{elementId},Diagram
cpd.qae.link.relatedQuestions=diagrams/list/{elementId}
# mongodb
cpd.mongodb.host=localhost
cpd.mongodb.port=27017
cpd.mongodb.name=cpd
cpd.mongodb.username=
cpd.mongodb.password=
cpd.mongodb.useObjectId=false
cpd.mongodb.maxPoolSize=100
cpd.mongodb.maxIdleTimeMS=60000
cpd.mongodb.maxLifeTimeMS=3600000
# oauth2
cpd.oauth2.origin=my redirect callback server origin (e.g. http://my.server:8901)
! NOTE: the oauth2 redirect callback endpoint will be:
!! "${cpd.oauth2.origin}${cpd.server.baseHref}oauth2/server/callback" for AUTH_CODE and CLIENT (1,2) flows
!! "${cpd.oauth2.origin}${cpd.server.baseHref}${cpd.app.path}oauth2/client/callback for IMPLICIT (3) flows
!! leave empty if no oauth2 is required (NOTE: if no oauth2 providers make sure to set cpd.app.useLocalAuth=true)
cpd.oauth2.providers=
! cpd.oauth2.providers must be a list of comma separated json objects (see example):
! example for 2 providers
#  cpd.oauth2.providers=\
#  {\
#    "provider":"Google",\
#    "logoUrl":"assets/img/oauth2_google_logo.png",\
#    "site":"https://accounts.google.com",\
#    "authPath":"/o/oauth2/auth",\
#    "tokenPath":"https://www.googleapis.com/oauth2/v3/token",\
#    "introspectionPath":"https://www.googleapis.com/oauth2/v3/tokeninfo",\
#    "clientId":"my google app client id",\
#    "clientSecret":"my google app client secret",\
#    "flows":[\
#      {\
#        "flowType":"AUTH_CODE",\
#        "scope":"email",\
#        "getUserProfile": "https://www.googleapis.com/plus/v1/people/{userId}"\
#      }\
#    ]\
#  },\
#  {\
#    "provider":"AAC",\
#    "logoUrl":"assets/img/oauth2_aac_logo.png",\
#    "site":"http://my.aac:8080",\
#    "authPath":"/aac/eauth/authorize",\
#    "tokenPath":"/aac/oauth/token",\
#    "clientId":"my aac app client id",\
#    "clientSecret":"my aac app client secret",\
#    "flows":[\
#      {\
#        "flowType":"IMPLICIT",\
#        "scope":"profile.basicprofile.me",\
#        "getUserProfile": "http://my.aac:8080/aac/basicprofile/me"\
#      },\
#      {\
#        "flowType":"CLIENT"\
#      }\
#    ]\
#  }
#   role
!   role.cpd
!!  role.cpd.access
role.cpd.access.prefix=role:cpd:access
!!! role.cpd.access.*
role.cpd.access.admin=${role.cpd.access.prefix}:admin
role.cpd.access.civilServant=${role.cpd.access.prefix}:civil-servant
role.cpd.access.citizen=${role.cpd.access.prefix}:citizen
!!  role.cpd.context
role.cpd.context.prefix=role:cpd:context
!!! role.cpd.context.diagram.*
role.cpd.context.diagram.owner=${role.cpd.context.prefix}:diagram:owner
role.cpd.context.diagram.editor=${role.cpd.context.prefix}:diagram:editor
role.cpd.context.diagram.reviewer=${role.cpd.context.prefix}:diagram:reviewer
role.cpd.context.diagram.collaborator=${role.cpd.context.prefix}:diagram:collaborator
role.cpd.context.diagram.observer=${role.cpd.context.prefix}:diagram:observer
