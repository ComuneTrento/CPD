{
  "swagger": "2.0",
  "info": {
    "description": "This is the [![Simpatico](https://simpatico.business-engineering.it/cpd/assets/img/left_simpatico_small.png)](http://www.simpatico-project.eu/) Collaborative Procedure Designer Server **public** API documentation page.",
    "version": "1.0.0",
    "title": "CPD Server",
    "contact": {
      "email": "v.cartelli@business-engineering.it"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "${cpd.server.pub.host}:${cpd.server.pub.port}",
  "basePath": "${cpd.server.baseHref}${cpd.server.api.path}",
  "schemes": [
    "${cpd.server.pub.scheme}"
  ],
  "paths": {
    "/stats/diagram/{diagramId}/eServiceCount": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Fetch the number of e-service in diagram",
        "description": "Fetches the number of all the e-services that are associated to the _Diagram_ identified by **{diagramId}**.",
        "operationId": "getDiagramEServiceCount",
        "parameters": [
          {
            "name": "diagramId",
            "in": "path",
            "description": "ID of diagram",
            "required": true,
            "type": "string",
            "default": "43467de2-9f42-477f-9f00-13b70f53ce24"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "400": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/diagram/summary/list": {
      "get": {
        "tags": [
          "summary"
        ],
        "summary": "List all the diagram summaries",
        "description": "Retrieves the list of **all** _DiagramSummary_.",
        "operationId": "getDiagramSummaryList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/diagram:DiagramSummary"
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/diagram/eService/{eServiceId}/summary": {
      "get": {
        "tags": [
          "summary"
        ],
        "summary": "Fetch the diagram summary by e-service ID",
        "description": "Retrieves the _DiagramSummary_ for the given e-service **{eServiceId}**.",
        "operationId": "getDiagramEServiceSummary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eServiceId",
            "in": "path",
            "description": "id of e-service",
            "required": true,
            "type": "string",
            "default": "08677aef-2b6d-4fff-bf10-91b2fe82bdc5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/diagram:DiagramSummary"
            }
          },
          "400": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/feedback/{fromDateTime}": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Fetch the list of user feedback",
        "description": "Retrieves the user feedback from the given **{fromDateTime}**.",
        "operationId": "getUserFeedbackFrom",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDateTime",
            "in": "path",
            "description": "ISO-8601 date-time from which to show the results",
            "required": true,
            "type": "string",
            "default": "2017-02-15T12:32:00+01:00"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "dateRange": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "$ref": "#/definitions/DateTime",
                      "description": "ISO-8601 date-time where the list begins (included)"
                    }
                  }
                },
                "feedbackList": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserFeedback"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/feedback/{fromDateTime}/{toDateTime}": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Fetch the list of user feedback",
        "description": "Retrieves the user feedback within the range [**{fromDateTime}**,**{toDateTime}**[.",
        "operationId": "getUserFeedback",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDateTime",
            "in": "path",
            "description": "ISO-8601 date-time where the list begins (included)",
            "required": true,
            "type": "string",
            "default": "2017-02-15T12:32:00+01:00"
          },
          {
            "name": "toDateTime",
            "in": "path",
            "description": "ISO-8601 date-time where the list stops (excluded)",
            "required": true,
            "type": "string",
            "default": "2018-01-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "dateRange": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "$ref": "#/definitions/DateTime",
                      "description": "ISO-8601 date-time where to start listing (included)"
                    },
                    "to": {
                      "$ref": "#/definitions/DateTime",
                      "description": "ISO-8601 date-time where to top listing (excluded)"
                    }
                  }
                },
                "feedbackList": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserFeedback"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DateTime": {
      "title": "DateTime",
      "type": "object",
      "properties": {
        "$date": {
          "type": "string",
          "description": "ISO-8601 date-time representation"
        }
      },
      "required": [
        "$date"
      ]
    },
    "UserFeedback": {
      "title": "UserFeedback",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the feedback"
        },
        "userId": {
          "type": "string",
          "description": "ID of the user who posted the feedback"
        },
        "feedback": {
          "type": "string",
          "description": "the posted feedback text"
        },
        "diagramId": {
          "type": "string",
          "description": "ID of the diagram where the feedback has been posted"
        },
        "elementId": {
          "type": "string",
          "description": "ID of the diagram element where the feedback has been posted"
        },
        "dateTime": {
          "$ref": "#/definitions/DateTime",
          "description": "ISO-8601 date-time of when the feedback has been posted"
        }
      }
    },
    "basic:Typed": {
      "title": "Typed",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "type of this Typed"
        }
      },
      "required": [
        "type"
      ]
    },
    "diagram:DiagramSummary": {
      "title": "DiagramSummary",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/basic:Typed"
        }
      ],
      "properties": {
        "url": {
          "type": "string",
          "description": "link to the Diagram (with eventually the focused DiagramElement) in the web application"
        },
        "svg": {
          "type": "string",
          "description": "link to the svg image of the Diagram"
        },
        "diagramId": {
          "type": "string",
          "description": "ID of the Diagram"
        },
        "notation": {
          "type": "string",
          "description": "Notation of the Diagram"
        },
        "diagramElementId": {
          "type": "string",
          "description": "optional ID of the focused DiagramElement in the url"
        },
        "name": {
          "type": "string",
          "description": "name of the SemanticElement associated to the Diagram"
        },
        "documentation": {
          "type": "string",
          "description": "name of the SemanticElement associated to the Diagram"
        }
      },
      "required": [
        "url",
        "svg",
        "diagramId",
        "notation",
        "name",
        "documentation"
      ]
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    }
  }
}